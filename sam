AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Defines Lambda Services for polling various APIs for collecting data and sending to Initial State to monitor a mining operation
Parameters:
  AppName:
    Type: String
    Default: miner-watch
  EthosDistroUrl:http://protar.ethosdistro.com/?json=yes
    Type: String
  AccessKey:v2CUbbWJ3c0c8lr8ZLh1lSovBpaxgQl6
    Type: String
    NoEcho: true
  BucketKey:C58VC6KQVS4N
    Type: String
  ZcashAddress:t1cukRadUi6bhDqHQSNiNChN2uKq6j7mVLX
    Type: String
Resources:
  ServiceIAMRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Version: 2012-10-17
        Statement: 
          - Effect: "Allow"
            Principal: 
              Service: 
                - "lambda.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      Policies: 
        - PolicyName: "ServiceIAMRole-2017-01-05"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - Effect: "Allow"
                Action: "dynamodb:*"
                Resource: !Join ["", ["arn:aws:dynamodb:", !Ref "AWS::Region" ,":", !Ref "AWS::AccountId",":table/", !Ref AppName, "*"]]
              - Effect: "Allow"
                Action: "logs:CreateLogGroup"
                Resource: !Join ["", ["arn:aws:logs:", !Ref "AWS::Region" ,":", !Ref "AWS::AccountId",":*"]]
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: !Join ["", ["arn:aws:logs:", !Ref "AWS::Region" ,":", !Ref "AWS::AccountId",":log-group:/aws/lambda/", !Ref AppName ,"*"]]
              - Effect: "Allow"
                Action: "SNS:*"
                Resource: !Ref RigDataSNS

  RigDataSNS:
    Type: AWS::SNS::Topic

  MinerWatchService:
    Type: AWS::Serverless::Function
    Properties:
      Handler: miner-watch.rigMonitor
      Runtime: nodejs4.3
      Role: !GetAtt ServiceIAMRole.Arn
      Description: Polls the mining rigs for their stats
      MemorySize: 256
      Timeout: 30
      Environment:
        Variables:
          MINING_RIG_URL: !Ref EthosDistroUrl
          ACCESS_KEY: !Ref AccessKey
          MAIN_BUCKET_KEY: !Ref BucketKey
          SEND_RIGDATA_TOPIC: !Ref RigDataSNS
      Events:
        MWCron:
          Type: Schedule
          Properties:
            Schedule: rate(1 minute)

  PerRigSendService:
    Type: AWS::Serverless::Function
    Properties:
      Handler: miner-watch.sendRigData
      Runtime: nodejs4.3
      Role: !GetAtt ServiceIAMRole.Arn
      Description: Gets Per Rig data from SNS and sends to Initial State
      MemorySize: 256
      Timeout: 30
      Environment:
        Variables:
          MINING_RIG_URL: !Ref EthosDistroUrl
          ACCESS_KEY: !Ref AccessKey
          MAIN_BUCKET_KEY: !Ref BucketKey
          SEND_RIGDATA_TOPIC: !Ref RigDataSNS
      Events:
        SnsEvents:
          Type: SNS
          Properties:
            Topic: !Ref RigDataSNS
  
  CryptoNanoPoolMonitorService:
    Type: AWS::Serverless::Function
    Properties:
      Handler: miner-watch.nanoPoolMonitor
      Runtime: nodejs4.3
      Description: monitors mining pool for stats
      MemorySize: 256
      Timeout: 30
      Role: !GetAtt ServiceIAMRole.Arn
      Environment:
        Variables:
          ACCESS_KEY: !Ref AccessKey
          MAIN_BUCKET_KEY: !Ref BucketKey
          CHECKPOINT_TABLE: !Ref CryptoPoolMonitorCheckpointTable
          ETH_ADDRESS: !Ref EtherAddress
      Events:
        CPMCron:
          Type: Schedule
          Properties:
            Schedule: rate(10 minutes)

  CryptoPoolMonitorCheckpointTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Type: String
        Name: id
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  CryptoNetworkMonitorService:
    Type: AWS::Serverless::Function
    Properties:
      Handler: miner-watch.networkMonitor
      Runtime: nodejs4.3
      Description: monitors mining network for stats
      MemorySize: 256
      Timeout: 30
      Role: !GetAtt ServiceIAMRole.Arn
      Environment:
        Variables:
          ACCESS_KEY: !Ref AccessKey
          MAIN_BUCKET_KEY: !Ref BucketKey
      Events:
        CNMCron:
          Type: Schedule
          Properties:
            Schedule: rate(1 minute)
